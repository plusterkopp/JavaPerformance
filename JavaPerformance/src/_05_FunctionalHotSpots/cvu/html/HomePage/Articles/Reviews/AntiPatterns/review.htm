<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="Description" content="Expert reviews of new and important books for C++ developers.">
   <meta name="GENERATOR" content="Mozilla/4.79 [en] (Windows NT 5.0; U) [Netscape]">
   <meta name="Author" content="Angelika Langer & Klaus Kreft">
   <meta name="KeyWords" content="Book, Reviews, C++, Visual C++, Training Education">
   <title>Book Review  -  Anti Patterns</title>
</head>
<body text="#000000" bgcolor="#FFFFFF" link="#113E79" vlink="#677DAD" alink="#008080">
<a NAME="BookReviewAntiPatterns"></a>
<table BORDER=0 CELLSPACING=0 CELLPADDING=0 >
<tr>
<td VALIGN=TOP>
<table BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH="489" >
<tr>
<td>&nbsp;</td>

<td>&nbsp;</td>

<td VALIGN=BOTTOM WIDTH="189"><img SRC="../../../Images/enterzonesub.gif" NOSAVE BORDER=0 height=33 width=189 align=LEFT></td>

<td WIDTH="50%">
<table BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH="387" >
<tr>
<td VALIGN=BOTTOM><b><sub><font face="Verdana"><font color="#FF0037"><font size=+3>&nbsp;
Book Review</font></font></font></sub></b> <b><i><sub><font face="Verdana"><font color="#232990"><font size=+1>of
the week</font></font></font></sub></i></b></td>
</tr>

<tr>
<td VALIGN=BOTTOM WIDTH="387"><img SRC="../../../Images/czonesubrule.gif" VSPACE=4 NOSAVE height=2 width=380></td>
</tr>
</table>
&nbsp;</td>
</tr>
</table>

<table BORDER=0 WIDTH="100%" >
<tr>
<td VALIGN=TOP WIDTH="10%">
<center><table BORDER=0 WIDTH="100%" >
<tr>
<td>&nbsp;</td>

<td VALIGN=TOP WIDTH="65"><img SRC="0471197130.gif" NOSAVE height=140 width=113></td>
</tr>

<tr>
<td>&nbsp;</td>

<td VALIGN=TOP WIDTH="65"><b><font face="Verdana"><font size=-2>AntiPatterns:
Refactoring Software, Architectures, and Projects in Crisis&nbsp;</font></font></b></td>
</tr>

<tr>
<td>&nbsp;</td>

<td VALIGN=TOP WIDTH="65"><i><font face="Verdana"><font size=-2>By William
J. Brown, et al&nbsp;</font></font></i></td>
</tr>

<tr>
<td>&nbsp;</td>

<td VALIGN=TOP WIDTH="65"><font face="Verdana"><font size=-2>New York,NY:Wiley
Computer Publishing&nbsp;</font></font></td>
</tr>

<tr>
<td>&nbsp;</td>

<td VALIGN=TOP WIDTH="65"><font face="Verdana"><font size=-2>ISBN 0-471-19713-0&nbsp;</font></font></td>
</tr>

<tr>
<td>&nbsp;</td>

<td VALIGN=TOP WIDTH="65"><font face="Verdana"><font size=-2>336 pages&nbsp;</font></font></td>
</tr>

<tr>
<td>&nbsp;</td>

<td VALIGN=TOP WIDTH="65"></td>
</tr>

<tr>
<td>&nbsp;</td>

<td VALIGN=TOP WIDTH="65"><font face="Verdana"><font size=-2>Price: $39.99&nbsp;</font></font></td>
</tr>

<tr>
<td WIDTH="10">&nbsp;</td>

<td VALIGN=TOP WIDTH="65"><i><font face="Verdana"><font size=-2>(Reviewed
12/15/98)&nbsp;</font></font></i></td>
</tr>
</table></center>
&nbsp;</td>

<td VALIGN=TOP WIDTH="100%">
<center><table BORDER=0 WIDTH="90%" >
<tr>
<td VALIGN=TOP WIDTH="60%"><b><font face="Verdana"><font color="#232990"><font size=+2>Adding
a New Facet to the Patterns Discussion&nbsp;</font></font></font></b></td>
</tr>

<tr>
<td WIDTH="60%"><i><font face="Verdana"><font size=-1>Volume describes
where projects go wrong in all areas of development</font></font></i></td>
</tr>

<tr>
<td>&nbsp;</td>
</tr>

<tr>
<td VALIGN=TOP><font face="Verdana"><font color="#333399"><font size=+2>P</font></font><font size=-1>atterns
have gained a significant role in all areas of software development since
<i>Design
Patterns</i> by Gamma, Helm, Johnson, and Vlissides was published in 1994.
Today there are patterns for implementation, design, analysis, and organization
of software development. Now <i>AntiPatterns</i> promises to add a new
facet to this pattern movement.</font></font>
<p><font face="Verdana"><font size=-1>&nbsp;According to the authors, "An
AntiPattern is a literary form that describes a commonly occurring solution
to a problem that generates decidedly negative consequences. (...) When
properly documented, an AntiPattern describes a general form, the primary
causes which led to the general form; symptoms describing how to recognize
the general form; the consequences of the general form; and a refactored
solution describing how to change the AntiPattern into a healthier situation."
In discussing the patterns that make projects go sour, the authors of <i>AntiPatterns</i>
cover all fundamental areas of software business and provide guidance on
refactoring solutions based on identifying dysfunctional behavior.</font></font>
<p><font face="Verdana"><font size=-1>&nbsp;<i>AntiPatterns</i> consists
of two parts: the first, smaller, part introduces AntiPatterns and the
abstract models and forces behind them. The second part discusses 50 AntiPatterns,
grouped into three categories: development, architecture, and project management.
An example from each category illustrates the idea of AntiPatterns.</font></font>
<p><font face="Verdana"><font size=-1>&nbsp;One development AntiPattern
is cut-and-paste programming. In this AntiPattern, code reuse by copying
source statements leads to significant maintenance problems. Developers
should use alternative forms of reuse, including black box reuse, and reduce
maintenance issues by having common source code, testing, and documentation.</font></font>
<p><font face="Verdana"><font size=-1>&nbsp;Vendor lock-in is one type
of architectural AntiPattern. Vendor lock-in occurs in systems that strongly
depend on proprietary architectures. The use of architectural isolation
layers can provide independence from vendor-specific solutions.</font></font>
<p><font face="Verdana"><font size=-1>&nbsp;Finally, an example of a project
management AntiPattern is death by planning. In this case, excessive planning
for software projects leads to complex schedules that cause downstream
problems. The authors describe how to plan a reasonable software process
that includes incorporating knowledge facts and incremental replanning.</font></font>
<p><font face="Verdana"><font size=-1>&nbsp;<i>AntiPatterns</i> helps to
identify what might be wrong with a software project and what can be done
to solve the problems. Since it does not focus on in-depth technical patterns
but covers the entire range of software development issues, including management
and organizational matters, the book is easy and worthwhile reading. Its
greatest merit is in the establishment of a common vocabulary, which might
ease communication between inherently different groups in a software projects,
such as developers, architects, and managers. They can use the terms defined
in <i>AntiPatterns</i> to discuss problems and solutions in a language
that all share and understand.&nbsp;</font></font>
<p><i><font face="Verdana"><font size=-1><b>Angelika Langer</b> develops
and teaches classes on advanced C++, STL, multithreading, internationalization,
and Java. She has served on the ANSI/ISO C++ Committee since 1993. <b>Klaus
Kreft</b> is a software architect and consultant with more than a decade
of experience in industrial software development. He works for Siemens
Business Services in Germany. Langer and Kreft are working on a book about
standard C++ iostreams and locales and are columnists for </font></font></i><font face="Verdana"><font size=-1>C++
Report<i>.&nbsp;</i></font></font></td>
</tr>
</table></center>
&nbsp;</td>
</tr>
</table>
&nbsp;</td>
</tr>
</table>

</body>
</html>
