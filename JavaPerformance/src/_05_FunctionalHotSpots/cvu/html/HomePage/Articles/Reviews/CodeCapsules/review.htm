<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="Generator" content="Microsoft Word 97">
   <meta name="GENERATOR" content="Mozilla/4.79 [en] (Windows NT 5.0; U) [Netscape]">
   <meta name="Author" content="Angelika Langer">
   <title>Book Review  -  C/C++ Code Capsules</title>
</head>
<body text="#000000" bgcolor="#FFFFFF" link="#113E79" vlink="#677DAD" alink="#008080">
<a NAME="BookReviewCodeCapsules"></a>
<table BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH="489" >
<tr>
<td>&nbsp;</td>

<td>&nbsp;</td>

<td VALIGN=BOTTOM WIDTH="122"><img SRC="../../../Images/czonesub.gif" NOSAVE height=33 width=106 align=LEFT></td>

<td WIDTH="50%">
<table BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH="561" >
<tr>
<td VALIGN=BOTTOM WIDTH="300"><b><sub><font face="Verdana"><font color="#FF0037"><font size=+3>&nbsp;
Book Review</font></font></font></sub></b> <b><i><sub><font face="Verdana"><font color="#996666"><font size=+1>of
the week</font></font></font></sub></i></b></td>
</tr>

<tr>
<td VALIGN=BOTTOM WIDTH="387"><img SRC="../../../Images/czonesubrule.gif" VSPACE=4 NOSAVE height=2 width=380></td>
</tr>
</table>
&nbsp;</td>
</tr>
</table>

<table BORDER=0 WIDTH="100%" >
<tr>
<td VALIGN=TOP WIDTH="10%">
<center><table BORDER=0 WIDTH="100%" >
<tr>
<td>&nbsp;</td>

<td VALIGN=TOP WIDTH="65"><img SRC="0135917859.gif" height=140 width=110></td>
</tr>

<tr>
<td>&nbsp;</td>

<td VALIGN=TOP WIDTH="65"><b><font face="Verdana"><font size=-2>C&amp;C++
Code Capsules&nbsp;</font></font></b></td>
</tr>

<tr>
<td>&nbsp;</td>

<td VALIGN=TOP WIDTH="65"><i><font face="Verdana"><font size=-2>By Chuck
Allison&nbsp;</font></font></i></td>
</tr>

<tr>
<td>&nbsp;</td>

<td VALIGN=TOP WIDTH="65"><font face="Verdana"><font size=-2>Upper Saddle
River,NJ:Prentice Hall PTR&nbsp;</font></font></td>
</tr>

<tr>
<td>&nbsp;</td>

<td VALIGN=TOP WIDTH="65"><font face="Verdana"><font size=-2>ISBN 0135917859&nbsp;</font></font></td>
</tr>

<tr>
<td>&nbsp;</td>

<td VALIGN=TOP WIDTH="65"><font face="Verdana"><font size=-2>570 pages&nbsp;</font></font></td>
</tr>

<tr>
<td>&nbsp;</td>

<td VALIGN=TOP WIDTH="65"></td>
</tr>

<tr>
<td>&nbsp;</td>

<td VALIGN=TOP WIDTH="65"><font face="Verdana"><font size=-2>Price: $39.95&nbsp;</font></font></td>
</tr>

<tr>
<td></td>

<td><font face="Verdana"><font size=-2>Reviewed: 7/1/98</font></font></td>
</tr>
</table></center>
&nbsp;</td>

<td VALIGN=TOP WIDTH="100%">
<center><table BORDER=0 WIDTH="90%" >
<tr>
<td VALIGN=TOP WIDTH="60%"><b><font face="Verdana"><font color="#996666"><font size=+2>Learning
Close-to-C and Machine-Level Programming&nbsp;</font></font></font></b></td>
</tr>

<tr>
<td WIDTH="60%"><i><font face="Verdana"><font size=-1>A clear, thorough,
down-to-earth book for practitioners</font></font></i></td>
</tr>

<tr>
<td VALIGN=TOP><font face="Verdana"><font color="#333399"><font size=+2>C</font></font><font size=-1>++
is a multi-paradigm programming language; that is, it supports close-to-the-machine
programming as well as high-level approaches such as object orientation
or generic programming. While many people shy away from bit and byte fiddling
and instead prefer object-oriented concepts as the silver bullet to all
their problems, Chuck Allison stays very down to earth. His book is about
close-to-C and machine-level programming. It's not that he omits inheritance,
polymorphism, templates, or exception handling. All of the relevant C++
language features are discussed, even major parts of the standard library
are introduced.</font></font>
<p><font face="Verdana"><font size=-1>&nbsp;However, this book's strength
is its coverage of the basic concepts that every C and C++ programmer should
thoroughly understand. Chuck spares us any esoteric topics. If you expect
to find any discussion of the latest ANSI standard features, you will be
disappointed. Date and time processing, for instance, are explained in
terms of the C locale rather than the C++ locales. Also, programming with
templates or exceptions is barely discussed. In contrast, the C library
is covered thoroughly, and basic concepts such as visibility and lifetime
of identifiers and objects are explained in a truly instructive and didactically
excellent way. In sum, system-level programmers will love this book; people
who love esoterica will prefer something else!</font></font>
<p><font face="Verdana"><font size=-1>&nbsp;<i>C&amp;C++ Code Capsules</i>
is organized into three three parts. The preliminaries discuss the "close
to C" part of C++: function-based programming, everything about pointers,
and comprehensive coverage of the standard C library. The key concepts
cover the typical C++ language features: classes, templates, exceptions,
and polymorphism, but also conversions and casts, a topic that is often
paid little attention to. Finally, the book discusses leveraging the standard
library. As the title says, this is about algorithms, containers, iterators
from the standard C++ library, but also about strings, both C- and C++-style
strings, file processing, time and date processing by means of the C library,
and memory management in C and C++.</font></font>
<p><font face="Verdana"><font size=-1>&nbsp;The book excels at insightful
explanations of basic concepts. Highlights include its discussion of pointers,
about which you learn everything that you could possibly want to know,
starting with what a pointer is, how pointer arithmetics work (even including
a discussion of different storage schemes such as big-endian and little-endian),
to constness of pointers and categories of pointers (such as pointers to
arrays, to functions, to members functions), and more. In addition, the
discussion of integers and floats is excellent. Do you know how floating
point numbers are represented? Do you know what the constant DBL_MANT_DIG
means or what the "machine epsilon" is? If you want to do floating point
arithmetics, you should understand these concepts. Chuck gives a wonderful
introduction into issues related to numbers, not only their representation
but also integral promotions and demotions as well as arithmetic conversions
implicitly performed by the C++ compiler. Finally, bit manipulation. Chuck
is the father of the bit handling classes in the standard C++ library.
Naturally, he covers bit fiddling in all its hues and shades: bitwise operators,
bitmasks, bitsets, and bit strings.</font></font>
<p><font face="Verdana"><font size=-1>&nbsp;So, what will this book buy
you? Let us quote the author himself: "Pointers gone awry are the nastiest
bugs a C++ programmer has to contend with. Indeed, pointers and the raw
power they give the developer have long been a popular criticism of C.
It's just too dangerous, people say." He closes his pointer chapter with
the statement that "C and C++ are only as dangerous as those who use them.
... If you understand these concepts, you are on your way to becoming a
responsible C++ programmer. Now go tell your boss she can trust you to
write real programs." It's a book for practitioners, indeed.&nbsp;</font></font>
<p><i><font face="Verdana"><font size=-1><b>Angelika Langer</b> develops
and teaches classes on advanced C++, STL, multithreading, internationalization,
and Java. She has served on the ANSI/ISO C++ Committee since 1993. <b>Klaus
Kreft</b> is a software architect and consultant with more than a decade
of experience in industrial software development. He works for Siemens
Business Services in Germany. Langer and Kreft are working on a book about
standard C++ iostreams and locales and are columnists for </font></font></i><font face="Verdana"><font size=-1>C++
Report<i>.&nbsp;</i></font></font></td>
</tr>
</table></center>
&nbsp;</td>
</tr>
</table>

</body>
</html>
