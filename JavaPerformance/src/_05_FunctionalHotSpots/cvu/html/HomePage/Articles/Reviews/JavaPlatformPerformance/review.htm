<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="Generator" content="Microsoft Word 97">
   <meta name="GENERATOR" content="Mozilla/4.79 [en] (Windows NT 5.0; U) [Netscape]">
   <meta name="Author" content="Angelika Langer & Klaus Kreft">
   <title>Book Review  -  Java Platform Performance</title>
</head>
<body text="#000000" bgcolor="#FFFFFF" link="#113E79" vlink="#677DAD" alink="#008080">
<a NAME="BokReview JavaPlatformPerformance"></a>
<table BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH="489" >
<tr>
<td>&nbsp;</td>

<td>&nbsp;</td>

<td VALIGN=BOTTOM WIDTH="122"><img SRC="../../../Images/javazonesub.gif" NOSAVE height=33 width=122 align=LEFT></td>

<td WIDTH="50%">
<table BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH="387" >
<tr>
<td VALIGN=BOTTOM WIDTH="300"><b><sub><font face="Verdana"><font color="#FF0037"><font size=+3>&nbsp;
Book Review</font></font></font></sub></b> <b><i><sub><font face="Verdana"><font color="#996666"><font size=+1>of
the week</font></font></font></sub></i></b></td>

<td ROWSPAN="2"><b><font face="Verdana"><font size=-2>&nbsp;</font></font></b></td>
</tr>

<tr>
<td VALIGN=BOTTOM WIDTH="387"><img SRC="../../../Images/javazonesubrule.gif" VSPACE=4 NOSAVE height=2 width=364></td>
</tr>
</table>
&nbsp;</td>
</tr>
</table>

<table BORDER=0 WIDTH="100%" >
<tr>
<td VALIGN=TOP WIDTH="10%">
<center><table BORDER=0 WIDTH="100%" >
<tr>
<td>&nbsp;</td>

<td VALIGN=TOP WIDTH="65"><img SRC="0201709694.jpg" NOSAVE height=140 width=110></td>
</tr>

<tr>
<td>&nbsp;</td>

<td VALIGN=TOP WIDTH="65"><b><font face="Verdana"><font size=-2>Java Platform
Performance: Strategies and Tactics&nbsp;</font></font></b></td>
</tr>

<tr>
<td>&nbsp;</td>

<td VALIGN=TOP WIDTH="65"><i><font face="Verdana"><font size=-2>By Steve
Wilson et al.</font></font></i></td>
</tr>

<tr>
<td>&nbsp;</td>

<td VALIGN=TOP WIDTH="65"><font face="Verdana"><font size=-2>Reading,MA:Addison-Wesley</font></font></td>
</tr>

<tr>
<td>&nbsp;</td>

<td VALIGN=TOP WIDTH="65"><font face="Verdana"><font size=-2>ISBN 0201709694&nbsp;</font></font></td>
</tr>

<tr>
<td>&nbsp;</td>

<td VALIGN=TOP WIDTH="65"><font face="Verdana"><font size=-2>234 pages&nbsp;</font></font></td>
</tr>

<tr>
<td>&nbsp;</td>

<td VALIGN=TOP WIDTH="65"></td>
</tr>

<tr>
<td>&nbsp;</td>

<td VALIGN=TOP WIDTH="65"><font face="Verdana"><font size=-2>Price: $34.95&nbsp;</font></font></td>
</tr>

<tr>
<td></td>

<td><i><font face="Verdana"><font size=-2>(Reviewed 2/2/01)&nbsp;</font></font></i></td>
</tr>
</table></center>
&nbsp;</td>

<td VALIGN=TOP WIDTH="100%">
<center><table BORDER=0 WIDTH="90%" >
<tr>
<td VALIGN=TOP WIDTH="60%"><b><font face="Verdana"><font color="#996666"><font size=+2>Devoted
Exclusively to Java Performance Improvements&nbsp;</font></font></font></b></td>
</tr>

<tr>
<td WIDTH="60%"><i><font face="Verdana"><font size=-1>No radically new
ideas, but a good introduction to Java performance issues</font></font></i></td>
</tr>

<tr>
<td VALIGN=TOP><font face="Verdana, Helvetica, Arial, sans-serif"><font color="#333399"><font size=+2>S</font></font><font size=-1>ince
the early days of Java, performance has been an area of concern for Java
developers. In order to address this concern, many of today's Java books
contain one or two chapters that discuss certain aspects of Java performance
and how to achieve a good or decent performance in Java programs. Examples
are <i><a href="http://www.java-zone.com/free/bookrevview.asp?content_id=406">Practical
Java</a></i> by Peter Haggar (Addison-Wesley, 2000), which deals mostly
with low-level programming tricks, and <i><a href="http://www.java-zone.com/free/bookrevview.asp?content_id=431">Java
2 Performance and Idiom Guide</a></i> by Craig Larman, et al., which takes
a somewhat broader look at this issue.&nbsp;</font></font>
<p><i><font face="Verdana, Helvetica, Arial, sans-serif"><font size=-1>Java
Platform Performance</font></font></i><font face="Verdana, Helvetica, Arial, sans-serif"><font size=-1>
is completely devoted to this matter. Because it is published in Addison-Wesley's
Sun Java series, it is also in some ways Sun's semi-official statement
related to this critical issue.&nbsp;</font></font>
<p><font face="Verdana, Helvetica, Arial, sans-serif"><font size=-1>Any
book that deals with performance and Java has to narrow its focus in certain
respects; the whole issue of Java performance is too much for a single
book. For example, think of general language and environment-independent
performance techniques (such as the use of buffering instead of single
element processing). Also consider the huge field of Java programming:
GUI programming, multithread programming, and distribution with different
programming models. Think of the different Java technologies like Jini
and EJB. While all of this is "Java," each of these areas has its own specific
performance issues and tricks.&nbsp;</font></font>
<p><font face="Verdana, Helvetica, Arial, sans-serif"><font size=-1>Because
<i>Java
Platform Performance</i> contains only 230 pages, it must be very focused;
let's see on what.&nbsp;</font></font>
<p><font face="Verdana, Helvetica, Arial, sans-serif"><font size=-1>The
first part of the book is called "Strategies." These three chapters (amounting
to fewer than 40 pages) each deal with one of the following issues:&nbsp;</font></font>
<ul>
<li>
<font face="Verdana, Helvetica, Arial, sans-serif"><font size=-1>What performance
is (runtime performance, RAM footprint, etc.)</font></font></li>

<li>
<font face="Verdana, Helvetica, Arial, sans-serif"><font size=-1>How achieving
good performance is linked to the complete software development process</font></font></li>

<li>
<font face="Verdana, Helvetica, Arial, sans-serif"><font size=-1>How to
benchmark and profile a software system</font></font></li>
</ul>
<font face="Verdana, Helvetica, Arial, sans-serif"><font size=-1>The second
part, called "Tactics," is where it gets concrete: nine chapters (roughly
150 pages) each deal with a specific Java performance issue:&nbsp;</font></font>
<ul>
<li>
<font face="Verdana, Helvetica, Arial, sans-serif"><font size=-1><b>I/O
performance.</b> Mostly discusses buffering and the tricky business of
object serialization.</font></font></li>

<li>
<font face="Verdana, Helvetica, Arial, sans-serif"><font size=-1><b>RAM
footprint.</b> Discusses how to measure and optimize object size.</font></font></li>

<li>
<font face="Verdana, Helvetica, Arial, sans-serif"><font size=-1><b>Class
loading.</b> Discusses when classes are really loaded and encourages programmers
to run multiple threads in one VM instead of multiple VMs.</font></font></li>

<li>
<font face="Verdana, Helvetica, Arial, sans-serif"><font size=-1><b>Object
mutability.</b> Discusses different aspects related to this issue: e.g.,
</font><tt><font size=+0>String</font></tt><font size=-1>
versus </font><tt><font size=+0>StringBuffer</font></tt><font size=-1>
performance, how immutable objects or immutable interfaces to mutable objects
can prevent the expensive invocation of </font><tt><font size=+0>clone()</font></tt><font size=-1>,
etc.</font></font></li>

<li>
<font face="Verdana, Helvetica, Arial, sans-serif"><font size=-1><b>Algorithms
and data structures.</b> Discusses choosing the right algorithms (iteration,
recursion) with the help of benchmarking, and selecting the appropriate
data structure type from the JDK 1.2 collection framework.</font></font></li>

<li>
<font face="Verdana, Helvetica, Arial, sans-serif"><font size=-1><b>Using
native code.</b> Discusses performance advantages (and disadvantages) using
JNI.</font></font></li>

<li>
<font face="Verdana, Helvetica, Arial, sans-serif"><font size=-1><b>Swing
programming</b> (two chapters on this). One chapter discusses renderers
and the Swing model; the other deals with more general Swing design and
implementation techniques to achieve a responsive user interface.</font></font></li>

<li>
<font face="Verdana, Helvetica, Arial, sans-serif"><font size=-1><b>Deployment.</b>
Discusses how JAR files can help you save download time.</font></font></li>
</ul>
<font face="Verdana, Helvetica, Arial, sans-serif"><font size=-1><i>Java
Platform Performance</i> closes with two appendices about the two most
import Java functionalities related to performance. One is Java garbage
collection and the other is the relatively new <a href="http://www.java.sun.com/products/hotspot/index.html" target="_blank">Java
HotSpot VM</a>. Steve Wilson and Jeff Kesselman discuss in detail what
the Java HotSpot VM does and to a certain degree how it works.&nbsp;</font></font>
<p><font face="Verdana, Helvetica, Arial, sans-serif"><font size=-1>The
discussion of garbage collection, in contrast, does not go into the direction
of how garbage collection is implemented in Java. Instead, the authors
discuss how references are logically maintained in Java: How does an object
become unreachable? What is the process of garbage collection (finalization,
freeing of memory, etc.)? What is the idea behind the reference abstractions
introduced with the Java 2 platform?&nbsp;</font></font>
<p><font face="Verdana, Helvetica, Arial, sans-serif"><font size=-1>As
you can see, <i>Java Platform Performance</i> focuses on those Java performance
issues that are relevant to all Java programmers. The only exception are
the two chapters about Swing programming, which might be not so interesting
for Java server-side programmers.&nbsp;</font></font>
<p><font face="Verdana, Helvetica, Arial, sans-serif"><font size=-1>There
is one issue that should have been covered: how well Java performs when
it is compiled to machine code. Perhaps this is not included because compiled
Java is at odds with Sun's official policy of "compile once, run everywhere."
Perhaps you shouldn't expect this issue to be raised in a book published
in the Sun Java series.&nbsp;</font></font>
<p><font face="Verdana, Helvetica, Arial, sans-serif"><font size=-1><i>Java
Platform Performance</i> is a good book that addresses all relevant issues
in a way that is easy to follow for someone new to Java performance. An
advanced Java programmer might find it a little disappointing, however,
because he or she might have already heard most of the issues. There are
no radically new ideas in this book. But then, new ideas regarding Java
performance improvements might not even exist.&nbsp;</font></font>
<p><i><font face="Verdana, Helvetica, Arial, sans-serif"><font size=-1><b>Angelika
Langer</b> develops and teaches classes on Java, C++, multithreading, and
internationalization. She is an internationally recognized speaker and
served on the ANSI/ISO C++ Committee from 1993 to 1998. <b>Klaus Kreft</b>
is a software architect and senior consultant with 15+ years of experience
in industrial software development. He currently works for Siemens Business
Services in Germany. Langer and Kreft are authors of "Standard C++ IOStreams
and Locales" (Addison-Wesley, 2000) and are columnists for the C/C++ Users
Journal.&nbsp;</font></font></i></td>
</tr>
</table></center>
&nbsp;</td>
</tr>
</table>

</body>
</html>
