<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="GENERATOR" content="Mozilla/4.79 [en] (Windows NT 5.0; U) [Netscape]">
   <meta name="Author" content="Angelika Langer & Klaus Kreft">
   <title>Book Review  -  International Programming for Microsoft Windows</title>
</head>
<body text="#000000" bgcolor="#FFFFFF" link="#113E79" vlink="#677DAD" alink="#008080" leftMargin="0" topMargin="0" marginwidth="0" marginheight="0">
<a NAME="BookReviewSchmitt"></a>
<table BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH="489" >
<tr>
<td>&nbsp;</td>

<td>&nbsp;</td>

<td VALIGN=BOTTOM WIDTH="189"><img SRC="../../../Images/cpluszonesm.gif" NOSAVE BORDER=0 height=36 width=178 align=LEFT></td>

<td WIDTH="50%">
<table BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH="643" >
<tr>
<td VALIGN=BOTTOM WIDTH="300"><b><sub><font face="Verdana"><font color="#FF0037"><font size=+3>&nbsp;
Book Review</font></font></font></sub></b> <b><i><sub><font face="Verdana"><font color="#232990"><font size=+1>of
the week</font></font></font></sub></i></b></td>
</tr>

<tr>
<td VALIGN=BOTTOM WIDTH="387"><img SRC="../../../Images/czonesubrule.gif" VSPACE=4 NOSAVE height=2 width=380></td>
</tr>
</table>
&nbsp;</td>
</tr>
</table>

<table BORDER=0 WIDTH="100%" >
<caption>&nbsp;</caption>

<tr>
<td VALIGN=TOP WIDTH="245">
<center><table BORDER=0 WIDTH="100%" >
<caption>&nbsp;</caption>

<tr>
<td VALIGN=TOP WIDTH="65"><img SRC="1572319569.gif" NOSAVE height=150 width=120></td>
</tr>

<tr>
<td VALIGN=TOP WIDTH="65"><b><font face="Verdana"><font size=-2>International
Programming for Microsoft Windows&nbsp;</font></font></b></td>
</tr>

<tr>
<td><i><font face="Verdana"><font size=-2>By David A. Schmitt</font></font></i></td>
</tr>

<tr>
<td VALIGN=TOP WIDTH="65"><font face="Verdana"><font size=-2>Redmond,WA:Microsoft
Press&nbsp;</font></font></td>
</tr>

<tr>
<td VALIGN=TOP WIDTH="65"><font face="Verdana"><font size=-2>ISBN 1572319569</font></font></td>
</tr>

<tr>
<td VALIGN=TOP WIDTH="65"><font face="Verdana"><font size=-2>470 pages</font></font></td>
</tr>

<tr>
<td VALIGN=TOP WIDTH="65"><font face="Verdana"><font size=-2>Includes CD-ROM</font></font></td>
</tr>

<tr>
<td VALIGN=TOP WIDTH="65"><font face="Verdana"><font size=-2>Price: $44.99</font></font></td>
</tr>

<tr>
<td VALIGN=TOP><i><font face="Verdana"><font size=-2>(Reviewed 7/28/00)&nbsp;</font></font></i></td>
</tr>
</table></center>
&nbsp;</td>

<td VALIGN=TOP WIDTH="50%">
<center><table BORDER=0 WIDTH="566" >
<caption>&nbsp;</caption>

<tr>
<td VALIGN=TOP WIDTH="60%"><b><font face="Verdana"><font color="#232990"><font size=+2>In-depth
Information for Implementing Internationalized C/C++ Programs Under Windows</font></font></font></b></td>
</tr>

<tr>
<td WIDTH="60%"><i><font face="Verdana"><font size=-1>Excels at being deep
and broad at the same time; valuable for novices and pros</font></font></i></td>
</tr>

<tr>
<td>&nbsp;</td>
</tr>

<tr>
<td WIDTH="60%"><font face="Verdana, Helvetica, Arial, sans-serif"><font color="#333399"><font size=+2>F</font></font><font size=-1>or
reasons of profitability, modern computer programs must be useful and attractive
to users all over the world. Naturally, people in different countries prefer
to interact with their computers in their respective native languages.
Ideally, computer programs should be adaptable to all conceivable local
languages and cultural conventions. As developers of products that aim
for high international acceptance, we must build into our programs the
ability to adapt to local conventions. This design issue is known as the
internationalization of computer software. <i>International Programming
for Microsoft Windows</i> explains how programmers can use various APIs
to internationalize C and C++ programs that must run on Microsoft Windows
platforms.&nbsp;</font></font>
<p><font face="Verdana, Helvetica, Arial, sans-serif"><font size=-1>David
A. Schmitt's book begins by describing the need and reasons for internationalizing
computer programs. Experience with international programming is not required.
Schmitt takes a broad look at cultural differences in general and how they
impinge on software development in particular. This includes a brilliant,
brief history of character sets: how they evolved from EBCDIC on mainframes
and 7-bit-ASCII codes over ANSI encodings to Unicode, which is today's
standard on Win32. After this introduction to the topic, he delves deeply
into the details of international programming in C and C++.&nbsp;</font></font>
<p><font face="Verdana, Helvetica, Arial, sans-serif"><font size=-1>As
can be expected from a book with this title, it is predominantly geared
towards Windows programmers. Schmitt covers all C and C++ programming interfaces
that are available for internationalization on the Windows platform—including
Windows-specific APIs, such as locales in Win32, and international standards
such as the ANSI C locales and the standard C++ locales, which support
development of portable internationalized programs. Thanks to this coverage
of standardized APIs, <i>International Programming for Microsoft Windows</i>
is also valuable to developers who aim to provide portable programs for
several platforms, Windows being just one of the target platforms. The
author is aware of portability issues and clearly points out where you
can leave the portability platform guaranteed by a standard and resort
to system-specific, non-portable functionality.&nbsp;</font></font>
<p><font face="Verdana, Helvetica, Arial, sans-serif"><font size=-1>Three
chapters are devoted to the various standard and non-standard locales that
address roughly the same problem area—namely, text-processing issues such
as formatting of monetary, date, and time values; language-dependent sorting
order, etc. However, international programs must also solve problems such
as selection of code pages and fonts or handling of different keyboard
layouts. Solutions to these problems typically require support by operating
system services. For this reason, the C and C++ standard standards deliberately
stay silent about these system-dependent issues. Because this is a book
specifically for Windows programmers, Schmitt naturally includes a discussion
of system-dependent APIs such as the Windows support for multilingual input
and output.&nbsp;</font></font>
<p><font face="Verdana, Helvetica, Arial, sans-serif"><font size=-1>All
APIs relevant to international programming are explained in detail and
their use is demonstrated by means of instructive sample programs, which
are available on the CD-ROM in the book. The author even addresses very
practical issues, such as the fact that Visual C++ 6.0 does not provide
a standard-compliant implementation of the C++ standard locales, how you
can find workarounds, and where you can obtain a standard-compliant implementation.&nbsp;</font></font>
<p><font face="Verdana, Helvetica, Arial, sans-serif"><font size=-1><i>International
Programming for Microsoft Windows</i> excels at being deep and broad at
the same time. Despite the fact that it provides an abundance of technical
details, it's very readable—not just for programmers who have not yet been
exposed to international programming, but also pros who look for details
regarding the internationalization APIs available for Windows programming.&nbsp;</font></font>
<p><font face="Verdana, Helvetica, Arial, sans-serif"><font size=-1>Naturally,
you can find alternative titles that are devoted to one particular aspect
out of the numerous topics that Schmitt covers in his book. For instance,
there is Nadine Kano's <i>Developing International Software for Windows
95 and NT</i> (<a href="http://msdn.microsoft.com/library/books/devintl/S24AA.HTM" target="_blank">Microsoft
Press, 1995</a>; now apparently out of print), which provides extensive
details for those who want to know more about the system-specific international
aspects of Windows. Although it has not been updated since 1995, most of
the content is still valid. For more details on the standard C++ locales
there is our own book, <i>Standard C++ IOStreams and Locales</i> (<a href="http://www.langer.camelot.de/iostreams.html" target="_blank">Addison-Wesley,
2000</a>). The ultimate information about Unicode, however, is available
in the <a href="http://www.unicode.org/unicode/standard/versions/enumeratedversions.html#Latest" target="_blank">Unicode
Standard</a> published by the Unicode Consortium. The best coverage of
multibyte character handling that we've come across so far is in Ken Lunde's
<i>Understanding
Japanese Information Processing</i> (<a href="http://www.oreilly.com/catalog/ujip/" target="_blank">O'Reilly,
1993</a>; now out of print). And so on, and so forth... Schmitt's bibliography
is very helpful and points you to alternative and further reading.&nbsp;</font></font>
<p><font face="Verdana, Helvetica, Arial, sans-serif"><font size=-1>These
other books notwithstanding, <i>International Programming for Microsoft
Windows</i> gives you an excellent introduction to the problem of international
programming and a lucid overview of all relevant APIs. Not only does it
provide sufficient detail, but it's up-do-date as well.&nbsp;</font></font>
<p><i><font face="Verdana, Helvetica, Arial, sans-serif"><font size=-1><b>Angelika
Langer</b> develops and teaches classes on advanced C++, STL, multithreading,
internationalization, and Java. She served on the ANSI/ISO C++ Committee
from 1993 to 1998. <b>Klaus Kreft</b> is a software architect and consultant
with 15+ years of experience in industrial software development. He works
for Siemens Business Services in Germany. Langer and Kreft are authors
of "Standard C++ IOStreams and Locales: Advanced Programmer's Guide and
Reference" (Addison-Wesley, 1999) and are columnists for <a href="http://www.creport.com/" target="_blank">C++
Report</a> magazine.&nbsp;</font></font></i></td>
</tr>
</table></center>
&nbsp;</td>
</tr>

<tr>
<td COLSPAN="2"></td>

<td></td>
</tr>
</table>

</body>
</html>
