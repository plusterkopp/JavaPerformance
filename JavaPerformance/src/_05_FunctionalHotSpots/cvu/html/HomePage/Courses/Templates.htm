<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="FORMATTER" content="Microsoft FrontPage 2.0">
   <meta name="GENERATOR" content="Mozilla/4.79 [en] (Windows NT 5.0; U) [Netscape]">
   <meta name="Author" content="Angelika Langer">
   <meta name="Description" content="The most comprehensive seminar on C++ template programming.  Everything you ever wanted to learn about templates.">
   <meta name="KeyWords" content="training, C++, templates, template metaprogramming, seminar">
   <title>C++ Template Programming</title>
</head>
<body text="#000000" bgcolor="#FFFFFF" link="#113E79" vlink="#677DAD" alink="#008080">
<a NAME="Top"></a><a NAME="TemplateCourse"></a>
<br><b><font face="Arial"><font color="#295AB5">COURSE DESCRIPTION</font></font></b>
<table BORDER=0 CELLSPACING=10 CELLPADDING=2 WIDTH="98%" >
<tr>
<td VALIGN=TOP WIDTH="50%"><img SRC="../Images/bar-small.gif" NOSAVE height=3 width=350>
<p>Traditionally, templates were known as a means to express parameterized
types. True and useful, but C++ templates allow more than just that. Over
the past couple of years, template programming has become a paradigm of
its own. Compile-time polymorphism, generic programming, template meta-programming
are only some of the buzz words in the field.&nbsp;
<p>Until recently, only few programmers were capable of exploiting the
full power of template features in C++, chiefly because popular compilers
(such as the Microsoft C++ compiler) did not support templates very well.&nbsp;
Today, even Microsoft is about to ship a standard-compliant C++ compiler
that will provide full support of all template language features, including
template template parameters, explicit specialization of templates, function
template overloading, and many more. Given the increasing availability
of excellent C++ compilers, template programming will soon enter the main
stream of C++ programming techniques.
<p>If you need to keep up with the C++ community and want to know everything
about the latest progamming techniques in C++, then this is the right course
for you.&nbsp;
<p>This seminar covers everything that is known today about template programming,
from basic language features to in-depth coverage of challenging issues
such as name lookup in presence of templates, template instantiation strategies,
the details of template argument deduction, specialization and overloading.
Language features are only half of the story. Beyond the features we'll
explore all modern template programming idioms and techniques that have
emerged so far, including compile-time polymorphism and generic programming
(as used in the STL), traits and policy classes (as used in the Boost and
Loki library), the curiously recurring template pattern and parameterized
virtuality (as used in the ATL), template metaprogramming and expression
templates.
<p><img SRC="../Images/bar-small.gif" NOSAVE height=3 width=350>
<p><font color="#295AB5">The course is designed and conducted by Angelika
Langer and backed by years of experience in teaching&nbsp; C++ related
topics and more than a decade of real-world experience in industrial software
development. Angelika Langer is a freelance trainer/consultant in the area
of object-oriented software development in C++ and Java. She is an observing
member of the ANSI C++ standards committee since 1993, former columnist
of C++ Report and C/C++ Users Journal, co-author of the book "Standard
C++ IOStreams and Locales", and a recognized speaker at conferences all
over the world.</font></td>

<td VALIGN=TOP WIDTH="50%">
<table BORDER=0 CELLPADDING=2 WIDTH="100%" >
<tr>
<td VALIGN=TOP WIDTH="35%"><b><i><font color="#295AB5">Prerequisite Courses
and Skills:</font></i></b></td>

<td VALIGN=TOP WIDTH="65%">Introductory C++ course, or equivalent experience&nbsp;
<p>1-5 years of programming experience using C++;
<br>knowledge of templates would be useful, but is not strictly required</td>
</tr>

<tr>
<td VALIGN=TOP WIDTH="50%"><b><i><font color="#295AB5">Duration:</font></i></b></td>

<td WIDTH="50%">3 days</td>
</tr>

<tr>
<td VALIGN=TOP WIDTH="50%"><b><i><font color="#295AB5">Exercises:</font></i></b></td>

<td WIDTH="50%">Workshops and hands-on labs</td>
</tr>
</table>

<p>Attendants should feel comfortable with the basics of the language and
be open for broadening their knowledge of traditional C++. We will explore
new language features along with related programming techniques. The goal
is not only to learn the syntax and semantics of templates, but also where
and why you would want to use them.&nbsp;
<p>Knowledge of templates will without doubt be helpful, but is not strictly
required.&nbsp; The course starts from scratch anyway and guides the attendants
step by step into increasingly complex template programming techniques.
<br>&nbsp;
<p><b><font face="Arial"><font color="#295AB5"><font size=+0>PERFORMANCE
OBJECTIVES</font></font></font></b>
<table BORDER=0 CELLSPACING=4 CELLPADDING=0 >
<tr>
<td><img SRC="../Images/bluebullet.gif" NOSAVE height=14 width=10></td>

<td>Catch up on the language standard</td>
</tr>

<tr>
<td><img SRC="../Images/bluebullet.gif" NOSAVE height=14 width=10></td>

<td>Understand modern template libraries</td>
</tr>

<tr>
<td><img SRC="../Images/bluebullet.gif" NOSAVE height=14 width=10></td>

<td>Know how to use templates to improve runtime perfomance</td>
</tr>

<tr>
<td><img SRC="../Images/bluebullet.gif" NOSAVE height=14 width=10></td>

<td>Keep up with the C++ community</td>
</tr>

<tr>
<td><img SRC="../Images/bluebullet.gif" NOSAVE height=14 width=10></td>

<td>Understand generic programming and template metaprogramming</td>
</tr>
</table>

<p><b><font face="Arial"><font color="#295AB5"><font size=+0>BUSINESS OBJECTIVES</font></font></font></b>
<table BORDER=0 CELLSPACING=4 CELLPADDING=0 >
<tr>
<td VALIGN=TOP><img SRC="../Images/bluebullet.gif" NOSAVE height=14 width=10></td>

<td>Equip your software professional with state-of-the-art C++ skills&nbsp;</td>
</tr>

<tr>
<td><img SRC="../Images/bluebullet.gif" NOSAVE height=14 width=10></td>

<td>Increase the efficiency of your C++ programs</td>
</tr>

<tr>
<td><img SRC="../Images/bluebullet.gif" NOSAVE height=14 width=10></td>

<td>Keep your software flexible and maintainable</td>
</tr>

<tr>
<td><img SRC="../Images/bluebullet.gif" NOSAVE height=14 width=10></td>

<td>Build high-quality products</td>
</tr>
</table>
&nbsp;</td>
</tr>
</table>

<br>&nbsp;
<table BORDER=0 COLS=2 WIDTH="100%" >
<tr>
<td><b><font face="Arial"><font color="#295AB5">COURSE CONTENT</font></font></b>
<p><img SRC="../Images/bar.gif" NOSAVE height=5 width=600></td>

<td ALIGN=RIGHT></td>
</tr>
</table>

<br>&nbsp;
<table BORDER=0 CELLPADDING=2 WIDTH="98%" >
<tr>
<td VALIGN=TOP WIDTH="33%"><b><i>Template Basics</i></b>
<ul>
<li>
Class and function templates</li>

<li>
Template parameters</li>

<li>
Class template specialization</li>

<li>
Function template overloading</li>

<li>
Member templates</li>
</ul>
<b><i>Advanced Template Features</i></b>
<ul>
<li>
Name lookup</li>

<li>
Friends and templates</li>

<li>
Template instantiation</li>

<li>
Template argument deduction</li>

<li>
Specialization and overloading</li>
</ul>
</td>

<td VALIGN=BASELINE WIDTH="33%"><b><i>Templates Programming Techniques</i></b>
<ul>
<li>
Static polymorphism and generic programming</li>

<li>
Traits and policy classes</li>

<li>
Static virtuality</li>

<li>
Template metaprogramming</li>

<li>
Expression templates</li>
</ul>
<b><i>Advanced Applications</i></b>
<ul>
<li>
Type traits</li>

<li>
Smart pointers</li>

<li>
Function objects</li>
</ul>
&nbsp;</td>
</tr>
</table>

<br>&nbsp;
<table BORDER=0 COLS=2 WIDTH="100%" >
<tr>
<td><b><font face="Arial"><font color="#295AB5">FURTHER READING</font></font></b>
<p><img SRC="../Images/bar.gif" NOSAVE height=5 width=600></td>

<td ALIGN=RIGHT></td>
</tr>
</table>

<table BORDER=0 CELLSPACING=10 CELLPADDING=2 WIDTH="100%" >
<caption>&nbsp;</caption>

<tr>
<td VALIGN=TOP WIDTH="60%"><a NAME="ReadingEffectiveJava"></a><font color="#000000">To
get an impression of some topics covered in this course check out the sample
reading:&nbsp;</font>
<br>&nbsp;
<table BORDER=0 CELLSPACING=0 CELLPADDING=0 >
<caption>&nbsp;</caption>

<tr>
<td ALIGN=CENTER VALIGN=TOP WIDTH="50"><a href="../Articles/Papers/TemplateProgramming/Paper.htm"><img SRC="../Images/whitepaper.gif" NOSAVE BORDER=0 height=27 width=31></a></td>

<td NOWRAP><font color="#000000"><a href="../Articles/Papers/TemplateProgramming/Paper.htm">Compile
Time Computations in C++</a></font>
<br><font color="#000000"><font size=-1>White Paper</font></font></td>
</tr>

<tr>
<td VALIGN=TOP>
<center><a href="../Articles/Cuj/ExpressionTemplates/ExpressionTemplates.htm"><img SRC="../Images/whitepaper.gif" NOSAVE BORDER=0 height=27 width=31></a></center>
</td>

<td VALIGN=TOP><a href="../Articles/Cuj/ExpressionTemplates/ExpressionTemplates.htm">Expression
Templates</a>
<br><font size=-1>Article in C/C++ Users Journal</font></td>
</tr>
</table>
</td>
</tr>
</table>

</body>
</html>
