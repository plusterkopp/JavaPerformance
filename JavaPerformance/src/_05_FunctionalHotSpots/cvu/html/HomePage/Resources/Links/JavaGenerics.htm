<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="GENERATOR" content="Mozilla/4.79 [en] (Windows NT 5.0; U) [Netscape]">
   <meta name="Author" content="Angelika Langer">
   <title>Links  -  Java Generics</title>
</head>
<body text="#000000" bgcolor="#FFFFFF" link="#113E79" vlink="#677DAD" alink="#008080">
<a NAME="Top"></a><a NAME="LinksJavaGenerics"></a>
<p>Below is a directory of websites and resources related to Java Generics,
a language feature added to the Java programming language with version
5.0 of J2SE. Most of the resources are in English, some in German.
<br>&nbsp;
<h2>
Specification Request JSR014</h2>

<blockquote><b>JSR Group</b>
<br>The official site for <a href="http://jcp.org/en/jsr/detail?id=14">specification
request</a> JSR014 "Adding Generic Types to the Java Programming Language".
The <a href="http://jcp.org/aboutJava/communityprocess/pfd/jsr014/">Proposed
Final Draft</a> of the Java Generics Specification came out in July 2004.
The final specification will be integrated in the 3rd edition of the Java
Language Specification (JLS 3), but is not yet available. Only a <a href="http://java.sun.com/docs/books/jls/jls-proposed-changes.html">draft
of JLS 3</a> is available for download.
<p><b>J2SE 5.0 Release</b>
<br>A <a href="http://java.sun.com/j2se/1.5.0/index.jsp">release</a> of
J2SE 5.0 is available for <a href="http://java.sun.com/j2se/1.5.0/download.jsp">download</a>
since September 2004.</blockquote>
<img SRC="../../Images/bar.gif" NOSAVE height=5 width=600>
<h2>
Tutorial</h2>

<blockquote><b><font face="Verdana"><font size=-2>TUTORIAL:</font></font>
Generics in the Java Programming Language</b>
<br>An excellent <a href="http://java.sun.com/j2se/1.5/pdf/generics-tutorial.pdf">tutorial</a>
for Java Generics by Gilad Bracha of Sun Microsystems published in February
2004 and updated in July 2004.</blockquote>
<img SRC="../../Images/bar.gif" NOSAVE height=5 width=600>
<h2>
FAQ</h2>

<blockquote><b><font face="Verdana"><font size=-2>FAQ:</font></font> Java
Generics FAQ</b>
<br>A <a href="http://www.AngelikaLanger.com/GenericsFAQ/JavaGenericsFAQ.html">FAQ</a>
maintained by Angelika Langer.&nbsp; Answers to frequently asked questions
related to Java Generics. Still under construction.&nbsp; Covers the basics
of Java Generics so far.&nbsp; Submit questions using this <a href="http://home.arcor.de/apfelsafttrinker/Forms/FAQ.html">form</a>.</blockquote>
<img SRC="../../Images/bar.gif" NOSAVE height=5 width=600>
<h2>
WebLogs, Discussion Forums</h2>

<blockquote><b><font face="Verdana"><font size=-2>FORUM:</font></font>
Generics Discussion Forum</b>
<br>A <a href="http://forum.java.sun.com/forum.jsp?forum=316">forum</a>
hosted by Sun Microsystems for discussion of Java Generics as well as other
language feature added to the language in J2SE 5.0.
<p><b><font face="Verdana"><font size=-2>WEBLOG:</font></font> Peter von
der Ah&eacute;'s Weblog</b>
<br>A <a href="http://blogs.sun.com/roller/page/ahe">weblog</a> by Peter
von der Ah&eacute; of Sun Microsystems.&nbsp; He posts answers to frequently
asked questions on wildcards, type inference and other issues related Java
Generics.
<p><b><font face="Verdana"><font size=-2>WEBLOG:</font></font> Neal Gafter's
Weblog</b>
<br>A <a href="http://gafter.blogspot.com/">weblog</a> by Neil Gafter.&nbsp;
He developed&nbsp; Sun Microsystems' Java 5.0 compiler including the support
of generics.
<p><b><font face="Verdana"><font size=-2>WEBLOG:</font></font> Bruce Eckel's
Weblog</b>
<br>Some <a href="http://mindview.net/WebLog/log-0057">weblog</a> entries
by Bruce Eckel are devoted to Java generics.&nbsp; Bruce is author of "Thinking
in Java" and several other books.
<p><b><font face="Verdana"><font size=-2>WEBLOG:</font></font> Keith Lea's
Weblog</b>
<br>A <a href="http://joust.kano.net/weblog/archive/2004/12/01/what-java-generics-needs/">weblog</a>
entry by Keith Lea devoted to Java generics.&nbsp; He points out limitations
of Java as currently available in Java 5.0 and provides his feature wishlist.</blockquote>
<img SRC="../../Images/bar.gif" NOSAVE height=5 width=600>
<h2>
Books</h2>

<blockquote><b><font face="Verdana"><font size=-2>BOOK (in German):</font></font>
Fortgeschrittene Programmierung mit Java 5</b>
<br>A <a href="http://www.dpunkt.de/buch/3-89864-306-9.html">book</a> in
German by Johannes Nowak published by Dpunkt Verlang in November 2004.&nbsp;
The book is an introduction to new features in Java 5.0 and also covers
Java Generics.&nbsp; It is a typical tutorial with lots of relatively simple
code examples that provides the type and level of&nbsp; information and
insight than can be found in other tutorials as well.
<p><b><font face="Verdana"><font size=-2>BOOK (in German):</font></font>
Das Tiger-Release: Java 5 im Einsatz - Generics, Enums, Concurrent Programming</b>
<br>A <a href="http://www.galileocomputing.de/katalog/buecher/titel/gp/titelID-693">book</a>
in German by Friedrich Esser published by Galileo Press in September 2004.&nbsp;
The book covers new language features in Java 5.0 and among them Java Generic.&nbsp;
This book is not meant as a tutorial, but provides a fairly challenging
explanation of the principles of Java Generics. The book is a little difficult
to read, mainly because of the author's writing style and the condensed
examples he uses.
<p><b><font face="Verdana"><font size=-2>BOOK:</font></font> Core Java,
Vol. 1 - Fundamentals, 7th Ed.</b>
<br>A Java <a href="http://www.phptr.com/title/0131482025">textbook</a>
by Cay Horstmann and Gary Cornell published by Prentice Hall in August
2004. It is an excellent textbook covering the Java programming language.&nbsp;
It has been updated to cover generics and provides a fairly comprehensive
overview of the generics language feature.
<p><b><font face="Verdana"><font size=-2>BOOK:</font></font> Java 1.5 Tiger</b>
<br>A <a href="http://www.oreilly.com/catalog/javaadn/">book</a> by Brett
McLaughlin and David Flanagan published by O'Reilly in Juni 2004. A brief
overview of the new language feature in Java 5.0. Well written, with lots
of examples.&nbsp; It is very short on generics.</blockquote>
<img SRC="../../Images/bar.gif" NOSAVE height=5 width=600>
<h2>
Articles and Papers</h2>
This list is fairly long and continuously growing.&nbsp; Articles are listed
roughly in the order they were published, youngest publications first.
<blockquote><b><font face="Verdana"><font size=-2>ARTICLE: </font></font>Case
Study: Converting to Java 1.5 Type-Safe Collections</b>
<br>An <a href="http://www.jot.fm/issues/issue_2004_09/column1">article</a>
by Wes Munsil published in the Journal of Object Technology (<a href="http://www.jot.fm">JOT</a>)
in September 2004.
<p><b><font face="Verdana"><font size=-2>ARTICLE: </font></font>Some Examples
of Generics in Java 1.5 and C# 2.0</b>
<br>An <a href="http://www.jot.fm/issues/issue_2004_08/column8">article</a>
by Richard Wiener published in the Journal of Object Technology (<a href="http://www.jot.fm">JOT</a>)
in September 2004. The author evaluates the code specialization for value
types in C# and the wildcards in Java.
<p><b><font face="Verdana"><font size=-2>ARTICLE:&nbsp; </font></font>Taming
Tiger, Part 2 - Understanding Generics</b>
<br>An <a href="http://www.javaworld.com/javaworld/jw-06-2004/jw-0607-tiger2.html">article</a>
by Tarak Modi published in Java World in June 2004. A brief introduction
with a few simple examples.
<p><b><font face="Verdana"><font size=-2>ARTICLE: </font></font>Adding
Wildcards to the Java Programming Language</b>
<br>An <a href="http://www.gafter.com/~neal/jot-wildcards.pdf">article</a>
by the designers of wildcards (several individuals at the university of
Aarhus and at Sun Microsystems, Inc.) published in the Journal of Object
Technology (<a href="http://www.jot.fm">JOT</a>) in April 2004.
<p><b><font face="Verdana"><font size=-2>ARTICLE: </font></font>Wildcard
Instantiations of Parameterized Types</b>
<br>A series of 2 articles by Klaus Kreft &amp; Angelika Langer published
in May 2004. <a href="http://www.ftponline.com/javapro/2004_05/online/kkreft_05_12_04/">Part
1</a> explains the purpose and use of the wildcards language construct
in Java Generics. <a href="http://www.ftponline.com/javapro/2004_05/online/kkreft_05_19_04/">Part
2</a> covers using wildcard instantiations and looks at some of their limitations.
<p><b><font face="Verdana"><font size=-2>ARTICLE: </font></font>Language
Features of Java Generics</b>
<br>An <a href="../../Articles/JavaPro/01.JavaGenericsIntroduction/JavaGenerics.html">article</a>
by Klaus Kreft &amp; Angelika Langer published in March 2004. An introduction
and overview of the major features of Java Generics. <a href="http://www.ftponline.com/javapro/2004_03/online/jgen_kkreft_03_03_04">Part
1</a> discusses parameterized types in general using parameteriezed collections
as an example. <a href="http://www.ftponline.com/javapro/2004_03/online/j2ee_kkreft_03_10_04">Part
2</a> covers parameterized methods as well as some aspects of the inner
workings of Java Generics such as translation by type erasure.
<p><b><font face="Verdana"><font size=-2>LINKS:</font></font> Papers describing
new language features in J2SE 5.0.</b>
<br>A <a href="http://java.sun.com/j2se/1.5.0/lang.html">collection of
links</a> to various papers related to Java generics hosted by Sun Microsystems,
Inc.
<p><b><font face="Verdana"><font size=-2>SLIDES: </font></font>Wildcards
in Generics</b>
<br>The <a href="http://www.daimi.au.dk/~madst/tool/talks/wildcards.pdf">slides</a>
of a lecture given by Christian Plesner Hansen at the University of Aarhus,
Denmark in February 2004.&nbsp; Explains the reasoning for addition of
wildcards to the language. Excellent background information. Links to further
documents can be found in the <a href="http://www.daimi.au.dk/~madst/tool/plan.html">overview</a>
of the course on "Types in Object-Oriented Languages" conducted at the
University of Aarhus.
<p><b><font face="Verdana"><font size=-2>ARTICLE: </font></font>Wildcards
in the Generics Specification</b>
<br>An <a href="http://today.java.net/pub/a/today/2004/01/15/wildcards.html">article</a>
by William Grosso published in January 2004. An brief, yet excellent explanation
of some aspects of wildcards, more of a motivating example rather than
a comprehensive coverage of the topic.
<p><b><font face="Verdana"><font size=-2>ARTICLE: </font></font>Talking
Tiger, generically speaking</b>
<br>An <a href="http://madbean.com/blog/64/">introduction</a> to Java Generics
by Matt Quail published in 2003. Very shallow; has bugs like showing an
immutable pair class that is not immutable.&nbsp; Listed for sake of comprehensiveness
only.
<p><b><font face="Verdana"><font size=-2>ARTICLE: </font></font>Arrays
in Java Generics</b>
<br>A brief <a href="../../Articles/Papers/JavaGenerics/ArraysInJavaGenerics.htm">article</a>
by Angelika Langer, that explains a couple of issues in conjuction with
arrays in Java Generics. In particular it shows why arrays of parameterized
types are illegal in Java Generics.
<p><b><font face="Verdana"><font size=-2>QUIZ:</font></font> Java 5.0 Generics</b>
<br>A <a href="http://www.grayman.de/quiz/java-generics-en.quiz">quiz</a>
which you can use to test your understanding of Java Generics. It's quite
instructive and fun.
<p><b><font face="Verdana"><font size=-2>ARTICLE: </font></font>Generics,
Erasure, and Bridging</b>
<br>An <a href="http://today.java.net/pub/a/today/2003/12/02/explorations.html">article</a>
by William Grosso published in December 2003. Good explanation of the principles
of type erasure and bridge methods.
<p><b><font face="Verdana"><font size=-2>CONVERSATION: </font></font>New
Language Features for Ease of Development in the Java 2 Platform, Standard
Edition 5.0</b>
<br>A <a href="http://java.sun.com/features/2003/05/bloch_qa.html">conversation</a>
led with Joshua Bloch in May 2003 about the new 5.0 anguage features.
<p><b><font face="Verdana"><font size=-2>ARTICLE: </font></font>Preparing
for Generics</b>
<br>An <a href="http://developer.java.sun.com/developer/technicalArticles/releases/generics/">introduction</a>
to Java Generics by Paul Mingardi published in November 2002.
<p><b><font face="Verdana"><font size=-2>ARTICLE: </font></font>Java generics
without the pain</b>
<br>A mini series of <a href="http://www-106.ibm.com/developerworks/java/library/j-djc02113.html">articles</a>
on Java Generics written by Eric Allen hosted by IBM.
<p><b><font face="Verdana"><font size=-2>PAPERS: </font></font>Bibliography</b>
<br>A <a href="http://www.fh-wedel.de/~si/seminare/ws02/Ausarbeitung/1.genericjava/layoutA.htm">directory</a>
of links to articles and papers related to Java Generics.&nbsp; It's the
bibliography of a <a href="http://www.fh-wedel.de/~si/seminare/ws02/Ausarbeitung/1.genericjava/layout0.htm#top">paper</a>
in German prepared by Heiko Minning.
<p><b><font face="Verdana"><font size=-2>ARTICLE: </font></font>Generische
Programmierung in Java</b>
<br>An <a href="http://www.sigs-datacom.de/sd/publications/js/1998/06/Generische_Programmierung_in_Java.htm">article</a>
in German by Ulrich Eisenecker und Krzystof Czarnecki.
<p><b><font face="Verdana"><font size=-2>PAPERS: </font></font>Papers by
Philip Wadler</b>
<br>A directory of <a href="http://www.research.avayalabs.com/user/wadler/topics/gj.html">articles</a>
on GJ and Pizza by Philip Wadler.
<p><b><font face="Verdana"><font size=-2>PAPERS: </font></font>Papers by
Martin Odersky</b>
<br>A directory of <a href="http://lamp.epfl.ch/~odersky/papers/">articles</a>
on GJ, Pizza and other topics such as type systems and functional programming
written by Martin Odersky of Ecole Polyt&eacute;cnique F&eacute;d&eacute;rale
de Lausanne.
<br>&nbsp;</blockquote>
<img SRC="../../Images/bar.gif" NOSAVE height=5 width=600>
<h2>
Topics Related to Java Generics</h2>

<blockquote><b>Adding Wildcards to the Java Programming Language</b>
<br>An <a href="http://www.bracha.org/wildcards.pdf">ACM paper</a> by Torgersen,
Hansen, Ernst, Ahe, Bracha and Gafter, published 2004.&nbsp; This paper
explains in which form variance has been integrated into Java Generics.&nbsp;
In particular it describes the wildcard mechanism itself, its impact on
type inference and a feature named wildcard capture.
<p><b>VGJ - Variant Generic Java</b>
<br>A page maintained devoted to the <a href="http://www.daimi.au.dk/~plesner/variance">variance</a>
concept in Java Generics. Variance, also known as wildcards, is one of
the features supported by Java Generics. A compiler for Java with variance,
called VGJ, has been developed as a joint project between the University
of Aarhus and Sun Microsystems.
<p><b>Type Inference</b>
<br>A <a href="http://www.cis.upenn.edu/~bcpierce/types/archives/current/msg00849.html">sample
program</a> by Alan Jeffrey&nbsp; of DePaul University Chicago, that demonstrates
a problem in the type inference concept of Java Generics.&nbsp; The problem
has been fixed in the meantime.</blockquote>

<p><br><img SRC="../../Images/bar.gif" NOSAVE height=5 width=600>
<h2>
Predecessors of Java Generics</h2>
This is a list of implementations and considerations for addition of generic
types and methods, that were made before Java Generics were added to the
the Java Standard Edition.&nbsp; It is instructive to take a look at them
in order to understand how they differ from Java Generics as defined by
the JSR014 specification group.
<blockquote><b>NextGen</b>
<br>An <a href="http://www.cs.rice.edu/~javaplt/nextgen/doc/">alternative</a>
to JSR014 Java Generics develop at Rice University. Quote from their page:
"NextGen is an efficient and compatible extension of the Java programming
language with support for generic types. Unlike other extensions of Java
with genericity, such as GJ and JSR-14, NextGen does not restrict the programmer
from using generic types in "type-dependent" contexts, such as casts, "instanceof"
tests, and "new" operations. Nevertheless, NextGen maintains full compatibility
with the JVM and existing compiled binaries."
<p><b>GJ (Generic Java)</b>
<br>The <a href="http://www.research.avayalabs.com/user/wadler/gj/">predecessor</a>
of JSR014 Java Generics that comes closest to what generics are today.
GJ was designed by Gilad Bracha of JavaSoft, Martin Odersky of the University
of South Australia, David Stoutamire of JavaSoft, and Philip Wadler of
Bell Labs, Lucent Technologies.
<p><b>Pizza</b>
<br>The <a href="http://pizzacompiler.sourceforge.net/">predecessor</a>
fo GJ, that is, the implementation of generics from which GJ was derived.
In addition to Generics it supports function pointers and algebraic types.</blockquote>

<p><br><img SRC="../../Images/bar.gif" NOSAVE height=5 width=600>
<h2>
Generics in other languages</h2>
This list should actually include material to C++ templates and Ada or
Eiffel generics, but I restrict it to C# generics, because C# is similar
and comparable to Java, while neither C++ nor Ada are.
<blockquote><b><font face="Verdana"><font size=-2>LINKS:</font></font>
C# Generics</b>
<br>In parallel to the specification of Java Generics at Sun Microsystems,
Microsoft works on adding generics to C#.&nbsp; It's kind of instructive
to compare the solutions found for <a href="http://research.microsoft.com/projects/clrgen/">C#
generics</a> to those implemented in Java generics, since the languages
are so similar. There is <a href="http://lists.ximian.com/archives/public/mono-list/2003-March/013177.html">further
information</a> at a site maintained by David Jeske and a <a href="http://www.daimi.au.dk/~madst/tool/papers/csharp.pdf">research
paper</a> by Kennedy and Syme of Microsoft Research in Cambridge, UK.
<p><b><font face="Verdana"><font size=-2>CONVERSATION:</font></font> Generics
in C#, Java, and C++ - A Conversation with Anders Hejlsberg, Part VII</b>
<br>A <a href="http://www.artima.com/intv/generics.html">conversation</a>
that Bill Venners and Bruce Eckel had in January 2004 with Anders Hejlberg,
the inventor of C#, about generics in the "curly brace" family of programming
languages.
<p><b><font face="Verdana"><font size=-2>WEBLOG:</font></font> Generics
Aren't</b>
<br>In his <a href="http://www.mindview.net/WebLog/log-0050">weblog</a>
Bruce Eckel expresses his astonishment regarding the features of Java generics
- or the lack thereof.- following by some thoughts on strong, weak, loose
and latent typing.&nbsp; Basically he is putting Java generics into perspective
comparing it to related features in other languages such as C++, Python,
Smalltalk.</blockquote>

<p><br><img SRC="../../Images/bar.gif" NOSAVE height=3 width=444>
<h2>
Type Theory</h2>

<blockquote><b>Object-Oriented Type Systems</b>
<br>A <a href="http://www.wiley.com/legacy/compbooks/catalog/94128-X.htm">book</a>
by Jens Palsberg and Michael I. Schwartzbach, published by Wiley in 1994
(ISBN 047194128X ). A textbook on the key aspects of object-oriented type
systems.
<p><b>Types in Object-Oriented Languages</b>
<br>A <a href="http://www.daimi.au.dk/studies/advanced-courses-UK.php#TypesinObject-OrientedLanguages">course</a>
conducted by Mads Torgersen at Aarhus University in spring 2004.&nbsp;
The course investigates the current state of the art of type systems for
object-oriented programming languages, with special attention to the recent
enhancement of the Java type system with genericity and variance constructs.
Course <a href="http://www.daimi.au.dk/~madst/tool/plan.html">handouts</a>
and related <a href="http://www.daimi.au.dk/~madst/tool/literature.html">reading</a>
are great resources for background information on Java Generics.
<br>&nbsp;</blockquote>
<img SRC="../../Images/bar.gif" NOSAVE height=3 width=444>
<h2>
Refactoring</h2>
Refactoring non-generic programs to use generic libraries is a problem
that many Java programmers face when they move to Java 5.0 and want to
re-engineer existing Java programs.&nbsp; Research is done to develop automatic
refactoring.&nbsp; The result of this research will be available in Java
IDEs some time in the future.
<blockquote><b><font face="Verdana"><font size=-2>PAPER: </font></font>Converting
Java programs to use generic libraries</b>
<br>A <a href="http://www.pag.csail.mit.edu/pubs/instantiating-generics-oopsla2004-abstract.html">paper</a>
by Alan Donovan, Adam Kiezun, Matthew S. Tschantz, and Michael D. Ernst
published in the proceedings of&nbsp; OOPSLA 2004 in November 2004. The
authors present research for refactoring non-generic Java programs to use
generic libraries such as the collections from the <tt>java.util </tt>package.
<p><b><font face="Verdana"><font size=-2>PAPER: </font></font>Refactoring
Techniques for Migrating Applications to Generic Java Container Classes</b>
<br>A <a href="http://www.pag.csail.mit.edu/pubs/refactoring-tip-rc23238.pdf">paper</a>
by Frank Tip, Robert Fuhrer, Julian Dolby and Adam Kiezun published by
IBM T.J. Watson Research Center (IBM Research Report RC 23238) in June
2004. The paper presents a method for refactoring Java programs that use
current container classes into equivalent Java 1.5 programs that use their
new generic counterparts.
<br>&nbsp;
<br>&nbsp;
<br>&nbsp;</blockquote>

</body>
</html>
